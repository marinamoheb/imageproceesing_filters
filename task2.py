# -*- coding: utf-8 -*-
"""task2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-1G6WCc0Zrjqe3A3WnpmyIOGXVAEQWcK
"""

import cv2 as cv
import matplotlib
import numpy as np
import matplotlib.pyplot as plt
from numpy import random
from PIL import Image, ImageFilter
from google.colab.patches import cv2_imshow
import skimage
img = cv.imread("333.jpg", 0)

#################gausian w kolo##################################3
def plotnoise(img, mode, r, c, i):
    plt.subplot(r,c,i)
    if mode is not None:
        gimg = skimage.util.random_noise(img, mode=mode)
        plt.imshow(gimg)
    else:
        plt.imshow(img)
    plt.title(mode)
    plt.axis("off")

plt.figure(figsize=(18,24))
r=4
c=2
plotnoise(img, "s&p", r,c,6)
plt.show()


def sp_noise(image,prob):

    output = np.zeros(image.shape,np.uint8)
    thres = 1 - prob
    for i in range(image.shape[0]):
        for j in range(image.shape[1]):
            rdn = random.random()
            if rdn < prob:
                output[i][j] = 0
            elif rdn > thres:
                output[i][j] = 255
            else:
                output[i][j] = image[i][j]
    return output


im2_noise = sp_noise(img, 0.05)

from google.colab.patches import cv2_imshow


cv2_imshow(im2_noise)

######Median######
median = cv.medianBlur(im2_noise,5)
###################average#########
imsize=(10, 10)
blur=cv.blur(img,imsize)

from google.colab.patches import cv2_imshow


cv2_imshow(median)

from google.colab.patches import cv2_imshow


cv2_imshow(blur)

from PIL import Image, ImageFilter
import skimage
from google.colab.patches import cv2_imshow
#####Max#######
im = Image.open("im2_noise.png")
im1 = im.filter(ImageFilter.RankFilter(9, 0)) 
imgplot = plt.imshow(im1)
plt.gray()

#####Min#######
im2 = im.filter(ImageFilter.RankFilter(1, 0))
imgplot = plt.imshow(im2)
plt.gray()